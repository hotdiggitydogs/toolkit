% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarizett.R
\name{summarizett}
\alias{summarizett}
\title{Quick and dirty significance tests}
\usage{
summarizett(dat, phenotype, maxgroups = 5, sig = 0.05,
  adjmethod = "bonferroni", num.test = wilcox.test, cl.test = fisher.test)
}
\arguments{
\item{dat}{\code{Data.frame}/\code{matrix} with dsamples as rows and
variables as columns.}

\item{phenotype}{Vector of phenotypes. See details.}

\item{maxgroups}{Maximum number of groups for contigency table test.}

\item{sig}{P-value cut-off for making a significant call.}

\item{adjmethod}{Method for p-value correction. Default: 'bonferroni'.}

\item{num.test}{\code{wilcox.test} (default) or \code{t.test}}

\item{cl.test}{\code{fisher.test} (default) or \code{chisq.test}}
}
\value{
A data.frame with the following columns:
   \describe{
     \item{pval:}{p-value of the specific test.}
     \item{sigp:}{p < \code{sig}.}
     \item{adjp:}{adjusted p-value.}
     \item{sigadj:}{adjp < \code{sig}}
   }
}
\description{
\code{summarizett} Perform significance tests as defined across columns in 
   a data.frame/matrix.
}
\details{
This function allows the user to quickly analyze a set of variables
   against a set of samples with 2 or more phenotypes. Since a \code{t.test}
   or \code{wilcox.test} is used for continuous variables, variables
   with >2 phenotypes are restricted only to ordinal/categorical variables.
   
   Input is a data.frame (preferably) or matrix where columns correspond
   to variables and rows correspond to samples. Depending on the class
   of the column, a different test is used. If the class is numeric, 
   the defined \code{num.test} is used. If the class is factor/character,
   \code{cl.test} is used instead.
   
   Adjusted p-values are calculated using defined \code{adjmethod}.
}
\examples{
pheno <- factor(sample(c('case','control'), 50, replace = TRUE))

dat <- matrix(rnorm(100),nrow = 50, ncol = 2)
dat <- cbind(dat, jitter(as.numeric(pheno)))
dat <- cbind(dat, sample(c('Pos','Neg'),50,replace = TRUE))
dat <- as.data.frame(dat, stringsAsFactors = FALSE)
colnames(dat) <- paste('Var',1:4,sep='_')

# Run summarizett. Var_3 is significant.
summarizett(dat, pheno)

}
